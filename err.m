function [C] = err(droll, P, Ph, alp, dalp, ddroll, d2nom, C5)
	##  Расчёт суммарной поправки на измерение резьбы методом трёх проволочек
	##
	##  Использование:
	##
	##    [C1 C3 C4 C5] = err(droll, P, Ph, alp, dalp, ddroll, d2nom, C5)
	##
	##    C1    поправка, учитывающая действительное отклонение угла профиля, мм
	##    C3    поправка, учитывающая действительное отклонение диаметров проволочек, мм
	##    C4    поправка, учитывающая расположение проволочек под углом к оси резьбы, мм
	##    C5    поправка, учитывающая измерительное усилие, мм
	##
	##  Входные параметры:
	##
	##    droll  номинальный диаметр роликов, мм
	##    P      номинальное значение шага резьбы, мм
	##    Ph     номинальное значение хода резьбы, мм
	##    alp    угол профиля резьбы, град
	##    dalp   отклонение угла профиля, мин
	##    ddroll отклонения диаметров проволочек (3-вектор) от номинала, мкм
	##    d2nom  номинальный средний диаметр контролируемой резьбы, мм
	##    C5     поправка, учитывающая измерительное усилие 2Н, мкм
	##

	if (droll != dp(P,alp))
		C1 = err1(droll, P, dalp);
		C3 = err3(ddroll(1), ddroll(2), ddroll(3));
	else
		C1 = C3 = 0;
	endif
	C4 = err4(d2nom, P, Ph, droll);
	C = [C1/1000  C3/1000  C4  C5/1000];

	return;
	# Debug output
	printf("Deviations:\n");
	printf("  C1 = %g\n", C1);
	printf("  C3 = %g\n", C3);
	printf("  C4 = %g\n", C4);
	printf("  C5 = %g\n", C5);
	printf("  Csum = %g\n", sum(C));
endfunction



function C1 = err1(droll, P, dalp)
	## Поправка, учитывающая действительное отклонение угла профиля
	##   (только при пользовании проволочками непредпочтительного диаметра)
	##
	C1 = (2.1*droll - 1.1*P) * dalp;
endfunction



function C3 = err3(ddroll1, ddroll2, ddroll3)
	## Поправка, учитывающая действительное отклонение диаметров проволочек
	##   (только при пользовании проволочками непредпочтительного диаметра)
	##
	C3 = -2.4 * (ddroll1 + (ddroll2 + ddroll3)/2);
endfunction



function C4 = err4(d2, P, Ph, droll)
	## Поправка, учитывающая расположение проволочек под углом к оси резьбы
	##
	if (thrang(d2, Ph) < 7)
		n = Ph / P; 
		C4 = d2 - 1.866*P;
		C4 = (C4 + 3.6049*droll) * (C4 + 3.8637*droll); 
		C4 = -0.1826 * P^2 * n^2 * droll / C4;
	else
		C4 = 0;
	endif
endfunction

